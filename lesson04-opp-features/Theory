1. Tính chất đóng gói (Encapsulation)

- khái niệm:
	tính chất đóng gói được thể hiện qua các từ khóa của access modifier (public, private, protected, )
	sử dụng ở: atribute(global variable), method(function), type(class, interface, abstract class, enum)
	+ private	: đóng gói trong phạm vi của class
	+ public	: sử dụng mọi nơi
	+ 			: đóng gói trong phạm vi của package
	+ protected	: đóng gói trong phạm vi của package 
					và những class có quan hệ cha/con bên ngoài package
					
2. Tính chất đa hình (Polymorphism)

- khái niệm:
	tính chất đa hình có 2 loại: phương thức & đối tượng
	+ đa hình trong phương thức: là 1 phương thức nhưng mà sẽ có nhiều phần thực thi, thể hiện khác nhau
		overloading -> 2 hay nhiều phương thức được gọi là overload nếu
			+ cùng: 1 type(class), tên hàm
			+ khác:
				KDL truyền vào của tham số
				số lượng tham số truyền vào
		overriding -> khi có 1 hàm trong class cha, hàm đó được định nghĩa lại trong class con
			( liên quan đến kế thừa )
			hàm override trong class con bắt buộc phải chung phần khai báo với hàm trong class cha
			void log() { //declaration
			
			}
	+ đa hình trong đối tượng
	
3. Tính chất thừa kế
+ Lớp cha là class
when: có các thuộc tính chung
--> Con: k bắt buộc override

+ Lớp cha là interface
when có các hàm chung chưa biết phần thực thi như nào

Trước java 8: interface chỉ chứa hàm trừu tượng 
--> con: bắt buộc override hàm trừu tượng từ cha


[Abstract] Class extends [Abstract] Class

[Abstract] Class implements Interface[s]

Interface extends Interface[s]

Abstract class implement Interface hoặc Interface extends Interface
--> k bắt buộc phải override abstract method


?? Java có hỗ trợ đa thừa kế không ?
	+ k hỗ trợ, có thể k override

-- java8 --> default, statis hàm có thể có body
-- java9 --> private









